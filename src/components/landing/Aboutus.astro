---
import { Picture } from 'astro:assets';
import { getCollection } from 'astro:content';

// Components
import AmenityCard from '../AmenityCard.astro';
import SubtitleDecorator from '../SubtitleDecorator.astro';

const amenities = await getCollection('amenities');

amenities.sort((a, b) => a.data.id - b.data.id);
---

<section class="about-us" id="about-us">
  <h2 class="subtitle scale">
    About Us
    <span class="subtitle-esp">Nosotros</span>
    <span class="subtitle-decorator">
      <SubtitleDecorator />
    </span>
  </h2>
  <p class="paragraph">
    Open in 2023 our venue has all the amenities for you and all your guests. <span
    >
      <a href="#" class="border-dotted-bottom text-primary"
        >Come and see the place</a
      >
    </span>
  </p>
  <div class="amenities-container">
    {
      amenities.map((amenity) => (
        <AmenityCard
          quantity={amenity.data.quantity}
          measurement={amenity.data.measurement}
        >
          <Picture src={amenity.data.icon} alt={amenity.data.altImage} />
        </AmenityCard>
      ))
    }
  </div>
</section>

<script>
  import anime from 'animejs/lib/anime.es';
  import { scaleUp } from '../../scripts/utils';

  let amenitiesObserver = new IntersectionObserver(monitorVisibility, {});

  let amenities = document.querySelector('.amenities-container');

  let iconsAmenities = amenities?.querySelectorAll('.card-image');

  const counters = document.querySelectorAll('.card-title .counter');

  function monitorVisibility(entries) {
    let entry = entries[0];
    if (entry.isIntersecting) {
      counters.forEach((counter) => {
        let startCounter = 0;
        let limitCounter = parseInt(counter.dataset.count);

        animateCounter(counter, { startCounter, limitCounter });
      });

      iconsAmenities?.forEach((icon) => {
        scaleUp(icon);
      });
    }
  }

  const animateCounter = (target, { startCounter, limitCounter }) => {
    anime({
      targets: target,
      innerHTML: [startCounter, limitCounter],
      easing: 'easeInOutExpo',
      round: 1,
      duration: 2000,
    });
  };

  amenitiesObserver.observe(amenities);
</script>
