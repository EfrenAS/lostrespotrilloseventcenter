---
// Config
import comments from '../../config/comments.json';

// Components
import Comment from '../CommentCard.astro';

const dotteds = Array.from({ length: comments.length }, (i) => i);
---

<section class="comments">
  <div class="container">
    <p class="text-dark">
      La proxima historia puede ser la tuya!
      <a href="#" class="border-dotted-bottom text-primary">Contact Us</a>
    </p>
    <p class="text-dark--large">
      Nuestros clientes nos han compartido sus comentarios
    </p>
    <div class="dotteds-container">
      {dotteds.map(() => <div class="dotted" />)}
    </div>
    <div class="comments_items container">
      {
        comments.map((comment) => (
          <Comment
            name={comment.name}
            comment={comment.comment}
            date={comment.date}
          />
        ))
      }
    </div>
  </div>
</section>
<script>
  let commentSectionObserver = new IntersectionObserver(monitorVisibility, {});
  let commentContainer = document.querySelector('.comments');

  function monitorVisibility(entries) {
    let entry = entries[0];

    if (entry.isIntersecting) {
      let slideIndex = 0;
      let slides = document.querySelectorAll('.comment-item');
      let dots = document.querySelectorAll('.dotted');

      dots.forEach((dot, index) => {
        dot.addEventListener('click', () => {
          currentSlides(index);
        });
      });

      const currentSlides = (n: number) => {
        showSlides((slideIndex = n));
      };

      function showSlides(n: number) {
        if (n > slides.length) {
          slideIndex = 0;
        }
        if (n < 0) {
          slideIndex = slides.length;
        }

        slides.forEach((slide) => {
          slide.classList.add('hidden');
        });

        dots.forEach((dot) => {
          dot.classList.remove('actived');
        });

        slides[slideIndex].classList.remove('hidden');

        slides[slideIndex + 1]?.classList.remove('hidden');
        slides[slideIndex].classList.add('fade');
        dots[slideIndex].classList.toggle('actived');
      }

      showSlides(slideIndex);
    }
  }
  commentSectionObserver.observe(commentContainer);
</script>
